{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\SocialMedia_App\\\\client\\\\src\\\\components\\\\messages\\\\Messages.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { AppBar, Typography, Toolbar, Avatar, Button } from '@material-ui/core';\nimport useStyles from './styles';\nimport { useDispatch } from 'react-redux';\nimport decode from 'jwt-decode';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Messages = () => {\n  _s();\n\n  const classes = useStyles();\n  const [seavalue, setValue] = useState(\"\");\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const history = useHistory();\n  const users = useSelector(state => state.users) || [];\n  const f_requests = user === null || user === void 0 ? void 0 : user.result.friendsRequest;\n  const filterusers = users.map(user => {\n    return f_requests.includes(user._id);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: filterusers.map(user => /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        align: \"center\"\n      },\n      children: user.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 22\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Messages, \"zBPZGduWWNTlzaN5LYqHrb96oJw=\", false, function () {\n  return [useStyles, useDispatch, useLocation, useHistory, useSelector];\n});\n\n_c = Messages;\nexport default Messages;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"sources":["C:/Users/HP/Desktop/SocialMedia_App/client/src/components/messages/Messages.js"],"names":["React","useState","useEffect","Link","useHistory","useLocation","AppBar","Typography","Toolbar","Avatar","Button","useStyles","useDispatch","decode","useSelector","Messages","classes","seavalue","setValue","user","setUser","JSON","parse","localStorage","getItem","dispatch","location","history","users","state","f_requests","result","friendsRequest","filterusers","map","includes","_id","align","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,SAASC,MAAT,EAAiBC,UAAjB,EAA6BC,OAA7B,EAAsCC,MAAtC,EAA8CC,MAA9C,QAA4D,mBAA5D;AACA,OAAOC,SAAP,MAAsB,UAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,MAAP,MAAmB,YAAnB;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AAGA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAEnB,QAAMC,OAAO,GAAGL,SAAS,EAAzB;AACA,QAAM,CAACM,QAAD,EAAWC,QAAX,IAAuBjB,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM,CAACkB,IAAD,EAAOC,OAAP,IAAkBnB,QAAQ,CAACoB,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CAAD,CAAhC;AACA,QAAMC,QAAQ,GAAGb,WAAW,EAA5B;AACA,QAAMc,QAAQ,GAAGrB,WAAW,EAA5B;AACA,QAAMsB,OAAO,GAAGvB,UAAU,EAA1B;AACA,QAAMwB,KAAK,GAAGd,WAAW,CAAEe,KAAD,IAAWA,KAAK,CAACD,KAAlB,CAAX,IAAuC,EAArD;AACA,QAAME,UAAU,GAAEX,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEY,MAAN,CAAaC,cAA/B;AAEA,QAAMC,WAAW,GAACL,KAAK,CAACM,GAAN,CAAWf,IAAD,IAAQ;AACpC,WAAOW,UAAU,CAACK,QAAX,CAAoBhB,IAAI,CAACiB,GAAzB,CAAP;AACC,GAFiB,CAAlB;AAIA,sBAEI;AAAA,cACIH,WAAW,CAACC,GAAZ,CAAiBf,IAAD,iBAGP;AAAI,MAAA,KAAK,EAAE;AAACkB,QAAAA,KAAK,EAAC;AAAP,OAAX;AAAA,gBACElB,IAAI,CAACmB;AADP;AAAA;AAAA;AAAA;AAAA,YAHT;AADJ;AAAA;AAAA;AAAA;AAAA,UAFJ;AAaH,CA5BD;;GAAMvB,Q;UAEcJ,S,EAGCC,W,EACAP,W,EACDD,U,EACFU,W;;;KARZC,Q;AA8BN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport { AppBar, Typography, Toolbar, Avatar, Button } from '@material-ui/core';\r\nimport useStyles from './styles';\r\nimport { useDispatch } from 'react-redux';\r\nimport decode from 'jwt-decode';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\nconst Messages = () => {\r\n\r\n    const classes = useStyles();\r\n    const [seavalue, setValue] = useState(\"\");\r\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\r\n    const dispatch = useDispatch();\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n    const users = useSelector((state) => state.users) || [];\r\n    const f_requests= user?.result.friendsRequest;\r\n\r\n    const filterusers=users.map((user)=>{\r\n    return f_requests.includes(user._id);\r\n    })\r\n\r\n    return (\r\n        \r\n        <div>\r\n           {filterusers.map((user)=>\r\n            \r\n           \r\n                     <h1 style={{align:\"center\"}}>\r\n                      {user.name}\r\n                      </h1> \r\n           \r\n           )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Messages\r\n"]},"metadata":{},"sourceType":"module"}