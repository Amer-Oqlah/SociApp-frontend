{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\SocialMedia_App\\\\client\\\\src\\\\components\\\\Forms\\\\Addpost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createPost } from '../../actions/posts';\nimport useStyles from './styles';\nimport Search from '@material-ui/icons/Search';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Addpost = ({\n  currentId,\n  setCurrentId\n}) => {\n  _s();\n\n  var _user$result2;\n\n  const [postData, setPostData] = useState({\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: ''\n  });\n  const post = useSelector(state => currentId ? state.posts.find(message => message._id === currentId) : null);\n  const [searchString, setSearch] = useState(\"\");\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const user = JSON.parse(localStorage.getItem('profile'));\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({\n      title: '',\n      message: '',\n      tags: '',\n      selectedFile: ''\n    });\n  };\n\n  const search = e => {\n    e.preventDefault();\n    console.log(searchString);\n  };\n\n  const handleSubmit = async e => {\n    var _user$result;\n\n    e.preventDefault();\n    dispatch(createPost({ ...postData,\n      name: user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result.name\n    }));\n    clear();\n  };\n\n  if (!(user === null || user === void 0 ? void 0 : (_user$result2 = user.result) === null || _user$result2 === void 0 ? void 0 : _user$result2.name)) {\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        align: \"center\",\n        children: \"Please Sign In to create post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"container\", {\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        autoComplete: \"off\",\n        noValidate: true,\n        className: `${classes.root} ${classes.form}`,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: currentId ? `Editing \"${post.title}\"` : 'Add a post'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"title\",\n          variant: \"outlined\",\n          label: \"Title\",\n          fullWidth: true,\n          value: postData.title,\n          onChange: e => setPostData({ ...postData,\n            title: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"message\",\n          variant: \"outlined\",\n          label: \"Message\",\n          fullWidth: true,\n          multiline: true,\n          rows: 4,\n          value: postData.message,\n          onChange: e => setPostData({ ...postData,\n            message: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.buttonSubmit,\n          variant: \"contained\",\n          color: \"primary\",\n          size: \"large\",\n          type: \"submit\",\n          fullWidth: true,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        autoComplete: \"off\",\n        noValidate: true,\n        className: `${classes.root} ${classes.form}`,\n        onSubmit: search,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          name: \"search \",\n          variant: \"outlined\",\n          label: \"search users ...\",\n          fullWidth: true,\n          value: searchString,\n          onChange: e => setSearch(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          size: \"small\",\n          fullWidth: true,\n          children: \"Search users \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Addpost, \"Sw8OTSw889qaxzrcgOGx0W4ouj4=\", false, function () {\n  return [useSelector, useDispatch, useStyles];\n});\n\n_c = Addpost;\nexport default Addpost; // import React, { useState, useEffect } from 'react';\n// import { TextField, Button, Typography, Paper } from '@material-ui/core';\n// import { useDispatch, useSelector } from 'react-redux';\n// import useStyles from './styles';\n// import { createPost } from '../../actions/posts';\n// const Addpost = ({ currentId, setCurrentId }) => {\n//   const [postData, setPostData] = useState({ creator: '', title: '', message: '', tags: ''});\n//   const post = useSelector((state) => (currentId ? state.posts.find((message) => message._id === currentId) : null));\n//   const dispatch = useDispatch();\n//   const classes = useStyles();\n//   useEffect(() => {\n//     if (post) setPostData(post);\n//   }, [post]);\n//   const clear = () => {\n//     setPostData({ creator: '', title: '', message: '', tags: ''});\n//   };\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//       dispatch(createPost(postData));\n//       clear();\n//     //  else {\n//     //   dispatch(updatePost(currentId, postData));\n//     //   clear();\n//     // }\n//   };\n//   return (\n//     <Paper className={classes.paper}>\n//       <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n//         <Typography variant=\"h6\"></Typography>\n//         <TextField name=\"creator\" variant=\"outlined\" label=\"Creator\" fullWidth value={postData.creator} onChange={(e) => setPostData({ ...postData, creator: e.target.value })} />\n//         <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.title} onChange={(e) => setPostData({ ...postData, title: e.target.value })} />\n//         <TextField name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth multiline rows={4} value={postData.message} onChange={(e) => setPostData({ ...postData, message: e.target.value })} />\n//         <TextField name=\"tags\" variant=\"outlined\" label=\"Tags (coma separated)\" fullWidth value={postData.tags} onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',') })} />\n//         <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\n//         <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n//       </form>\n//     </Paper>\n//   );\n// };\n// export default Addpost;\n\nvar _c;\n\n$RefreshReg$(_c, \"Addpost\");","map":{"version":3,"sources":["C:/Users/HP/Desktop/SocialMedia_App/client/src/components/Forms/Addpost.js"],"names":["React","useState","useEffect","TextField","Button","Typography","Paper","useDispatch","useSelector","createPost","useStyles","Search","Addpost","currentId","setCurrentId","postData","setPostData","title","message","tags","selectedFile","post","state","posts","find","_id","searchString","setSearch","dispatch","classes","user","JSON","parse","localStorage","getItem","clear","search","e","preventDefault","console","log","handleSubmit","name","result","paper","root","form","target","value","buttonSubmit"],"mappings":"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","sourcesContent":["\r\nimport React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n\r\nimport { createPost} from '../../actions/posts';\r\nimport useStyles from './styles';\r\nimport Search from '@material-ui/icons/Search';\r\n\r\nconst Addpost = ({ currentId, setCurrentId }) => {\r\n  const [postData, setPostData] = useState({ title: '', message: '', tags: '', selectedFile: '' });\r\n  const post = useSelector((state) => (currentId ? state.posts.find((message) => message._id === currentId) : null));\r\n  const [searchString,setSearch]=useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const user = JSON.parse(localStorage.getItem('profile'));\r\n\r\n  useEffect(() => {\r\n    if (post) setPostData(post);\r\n  }, [post]);\r\n\r\n  const clear = () => {\r\n    setCurrentId(0);\r\n    setPostData({ title: '', message: '', tags: '', selectedFile: '' });\r\n  };\r\n  const search =  e => {\r\n    e.preventDefault();\r\n      console.log(searchString)\r\n \r\n     \r\n  \r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n \r\n      dispatch(createPost({ ...postData, name: user?.result?.name }));\r\n      clear();\r\n  \r\n  };\r\n\r\n  if (!user?.result?.name) {\r\n    return (\r\n      <Paper className={classes.paper}>\r\n        <Typography variant=\"h6\" align=\"center\">\r\n          Please Sign In to create post\r\n        </Typography>\r\n      </Paper>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <container>\r\n    <Paper className={classes.paper}>\r\n      <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\r\n        <Typography variant=\"h6\">{currentId ? `Editing \"${post.title}\"` : 'Add a post'}</Typography>\r\n        <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.title} onChange={(e) => setPostData({ ...postData, title: e.target.value })} />\r\n        <TextField name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth multiline rows={4} value={postData.message} onChange={(e) => setPostData({ ...postData, message: e.target.value })} />\r\n        \r\n        \r\n        <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\r\n        {/* <Button variant=\"contained\" color=\"primary\" size=\"small\" onClick={clear} fullWidth>Clear</Button> */}\r\n      </form>\r\n     \r\n    </Paper>\r\n     \r\n      <Paper className={classes.paper}>\r\n        <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={search}>\r\n    <TextField name=\"search \" variant=\"outlined\" label=\"search users ...\" fullWidth value ={searchString} onChange={e => setSearch(e.target.value)} />\r\n    <Button variant=\"contained\" color=\"primary\" size=\"small\" fullWidth  >Search users </Button>\r\n    </form>\r\n    </Paper>\r\n    </container>\r\n  ) \r\n};\r\n\r\nexport default Addpost;\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import { TextField, Button, Typography, Paper } from '@material-ui/core';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// import useStyles from './styles';\r\n// import { createPost } from '../../actions/posts';\r\n\r\n// const Addpost = ({ currentId, setCurrentId }) => {\r\n//   const [postData, setPostData] = useState({ creator: '', title: '', message: '', tags: ''});\r\n//   const post = useSelector((state) => (currentId ? state.posts.find((message) => message._id === currentId) : null));\r\n//   const dispatch = useDispatch();\r\n//   const classes = useStyles();\r\n\r\n//   useEffect(() => {\r\n//     if (post) setPostData(post);\r\n//   }, [post]);\r\n\r\n//   const clear = () => {\r\n   \r\n//     setPostData({ creator: '', title: '', message: '', tags: ''});\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n\r\n\r\n//       dispatch(createPost(postData));\r\n//       clear();\r\n    \r\n//     //  else {\r\n//     //   dispatch(updatePost(currentId, postData));\r\n//     //   clear();\r\n//     // }\r\n//   };\r\n\r\n//   return (\r\n//     <Paper className={classes.paper}>\r\n//       <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\r\n//         <Typography variant=\"h6\"></Typography>\r\n//         <TextField name=\"creator\" variant=\"outlined\" label=\"Creator\" fullWidth value={postData.creator} onChange={(e) => setPostData({ ...postData, creator: e.target.value })} />\r\n//         <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.title} onChange={(e) => setPostData({ ...postData, title: e.target.value })} />\r\n//         <TextField name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth multiline rows={4} value={postData.message} onChange={(e) => setPostData({ ...postData, message: e.target.value })} />\r\n//         <TextField name=\"tags\" variant=\"outlined\" label=\"Tags (coma separated)\" fullWidth value={postData.tags} onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',') })} />\r\n//         <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\r\n//         <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\r\n//       </form>\r\n//     </Paper>\r\n//   );\r\n// };\r\n\r\n// export default Addpost;"]},"metadata":{},"sourceType":"module"}