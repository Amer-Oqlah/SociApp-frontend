{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\SocialMedia_App\\\\client\\\\src\\\\components\\\\messages\\\\Messages.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { AppBar, Typography, Toolbar, Avatar, Button } from '@material-ui/core';\nimport { borders } from '@material-ui/system';\nimport useStyles from './styles';\nimport { useDispatch } from 'react-redux';\nimport decode from 'jwt-decode';\nimport { useSelector } from 'react-redux';\nimport { fetchUsers } from '../../actions/users';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Messages = () => {\n  _s();\n\n  const classes = useStyles();\n  const [seavalue, setValue] = useState(\"\");\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const history = useHistory();\n  const users = useSelector(state => state.users) || [];\n  const f_requests = user === null || user === void 0 ? void 0 : user.result.friendsRequest;\n  const filterusers = users.filter(user => {\n    return f_requests.includes(user._id);\n  });\n  console.log(filterusers);\n  useEffect(() => {\n    dispatch(fetchUsers());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.brandContainer,\n    children: filterusers.map(user => /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        className: classes.toolbar,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.profile,\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            className: classes.purple,\n            alt: user === null || user === void 0 ? void 0 : user.name,\n            src: user === null || user === void 0 ? void 0 : user.imageUrl,\n            children: user === null || user === void 0 ? void 0 : user.name.charAt(0)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.userName,\n            variant: \"h6\",\n            children: user === null || user === void 0 ? void 0 : user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            className: classes.logout,\n            color: \"secondary\",\n            children: \"Refuse\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            size: 'small',\n            color: \"primary\",\n            children: \" Accept\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Messages, \"raZ/d6Cd/a+UCozwRuJaEYibK+4=\", false, function () {\n  return [useStyles, useDispatch, useLocation, useHistory, useSelector];\n});\n\n_c = Messages;\nexport default Messages;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"sources":["C:/Users/HP/Desktop/SocialMedia_App/client/src/components/messages/Messages.js"],"names":["React","useState","useEffect","Link","useHistory","useLocation","AppBar","Typography","Toolbar","Avatar","Button","borders","useStyles","useDispatch","decode","useSelector","fetchUsers","Messages","classes","seavalue","setValue","user","setUser","JSON","parse","localStorage","getItem","dispatch","location","history","users","state","f_requests","result","friendsRequest","filterusers","filter","includes","_id","console","log","brandContainer","map","toolbar","profile","purple","name","imageUrl","charAt","userName","logout"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport { AppBar, Typography, Toolbar, Avatar, Button } from '@material-ui/core';\r\nimport { borders } from '@material-ui/system';\r\nimport useStyles from './styles';\r\nimport { useDispatch } from 'react-redux';\r\nimport decode from 'jwt-decode';\r\nimport { useSelector } from 'react-redux';\r\nimport {fetchUsers} from '../../actions/users';\r\n\r\n\r\n\r\nconst Messages = () => {\r\n\r\n    const classes = useStyles();\r\n    const [seavalue, setValue] = useState(\"\");\r\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\r\n    const dispatch = useDispatch();\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n\r\n\r\n    const users = useSelector((state) => state.users) || [];\r\n    const f_requests= user?.result.friendsRequest;\r\n   const filterusers= users.filter(user=>{\r\n        return f_requests.includes(user._id)\r\n        \r\n      })\r\n   \r\n    \r\n    console.log(filterusers)\r\n  useEffect(() => {\r\n     \r\n      dispatch(fetchUsers());\r\n\r\n   \r\n    },[dispatch]);\r\n\r\n\r\n    return (\r\n        \r\n        <div className={classes.brandContainer}>\r\n           {filterusers.map((user)=>\r\n          <Box display=\"flex\" justifyContent=\"center\">    \r\n    <Toolbar className={classes.toolbar}>\r\n        \r\n         \r\n          <div className={classes.profile}>\r\n            <Avatar className={classes.purple} alt={user?.name} src={user?.imageUrl}>{user?.name.charAt(0)}</Avatar>\r\n         \r\n            <Typography className={classes.userName} variant=\"h6\">{user?.name}</Typography>\r\n           \r\n            <Button variant=\"contained\" className={classes.logout} color=\"secondary\" >Refuse</Button>\r\n            <Button variant=\"contained\" size={'small'} color=\"primary\" > Accept</Button>\r\n          </div>\r\n        \r\n    </Toolbar>\r\n           \r\n    </Box>           \r\n                    \r\n           \r\n           )} \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Messages\r\n"]},"metadata":{},"sourceType":"module"}